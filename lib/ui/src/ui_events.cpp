// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.4.2
// LVGL version: 8.3.11
// Project name: SquareLine_Project

#include "ui.h"
#include <WiFi.h>
#include <EEPROM.h>
#include <RHMesh.h>
#include <RH_RF95.h>
#include <TFT_eSPI.h>
#include "system.h"
#include <PubSubClient.h>
#include "communication.h"
#include "devicemanager.h"
extern packageData package;

extern DeviceManager deviceManager;
extern StationManager stationManager;
void loadScreen3(lv_event_t * e)
{
	// Your code here
}

void loadScreen4(lv_event_t * e)
{
    if(e->code == LV_EVENT_REFRESH) {
        // Clear and reload the dropdown options
        lv_dropdown_clear_options(ui_Dropdown3);

        for (const auto& station : stationManager.getStations()) {
            lv_dropdown_add_option(ui_Dropdown3, station.idNode.c_str(), LV_DROPDOWN_POS_LAST);
        }
    }
}


void addStation(lv_event_t * e)
{
    package.title = "addstation";
    char buf[32];
    lv_dropdown_get_selected_str(ui_Dropdown3, buf, sizeof(buf));
    uint8_t address = (uint8_t)atoi(buf);
    Serial.println("address resgin: ");
	Serial.print(address);
    sendData(package, address);
}

void delStation(lv_event_t * e) {
    Serial.println(idNodeSelect);
    if(idNodeSelect != nullptr && strcmp(idNodeSelect, "") != 0) {
        stationManager.resetStations(String(idNodeSelect));
		deviceManager.removeDevicesByIdNode(idNodeSelect);
		// saveDevicesToSPIFFS(deviceManager);
        lv_obj_clean(lv_scr_act());
        ui_Screen4_screen_init();
        _ui_screen_change(&ui_Screen4, LV_SCR_LOAD_ANIM_FADE_ON, 500, 0, &ui_Screen4_screen_init);
		
    }
}


void screenload5(lv_event_t * e)
{
	

}
void loadValues(lv_event_t * e){
	
}
void changeValues(lv_event_t * e)
{
	char buf[32];
	lv_dropdown_get_selected_str(ui_Dropdown5,buf,sizeof(buf));
	uint8_t address =(uint8_t)atoi(buf);
	package.title="change";
	package.data.resize(3);
	package.data[0]=atof(lv_label_get_text(ui_TextArea3));
	package.data[1]=atof(lv_label_get_text(ui_TextArea4));
	package.data[2]=atof(lv_label_get_text(ui_TextArea5));
	sendData(package,address);

}

void screenLoad6(lv_event_t * e)
{
	if(WiFi.status() == WL_CONNECTED){
		lv_label_set_text(ui_Label22, "Wifi connected!");
		lv_label_set_text(ui_Label23, ssid);
		lv_textarea_set_text(ui_TextArea1,"");
		lv_textarea_set_text(ui_TextArea2,"");
		lv_label_set_text(ui_Label31, "");
	}
	else {
		lv_textarea_set_text(ui_TextArea1,"");
		lv_textarea_set_text(ui_TextArea2,"");
		lv_label_set_text(ui_Label22, "Conntect faild!");
		lv_label_set_text(ui_Label23, ssid);
	}
}

void configWifi(lv_event_t * e)
{
	strcpy(ssid,lv_textarea_get_text(ui_TextArea6));
    strcpy(passW,lv_textarea_get_text(ui_TextArea7));
	if(setupWifi()){
		screenLoad6(e);
		saveWiFiCredentials();
		lv_label_set_text(ui_Label31, "Save wifi config!");
		
	}
	else {
		lv_label_set_text(ui_Label31, "Check again ssid and pass!");
	}
}
